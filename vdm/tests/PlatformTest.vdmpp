class PlatformTest is subclass of Test
types
-- TODO Define types here
values
-- TODO Define values here
instance variables
	private duration: nat1 := 20;
	private totalPrice: nat1 := 120;
	private initialDate: Globals`Date := mk_Globals`Date(2016,1,10);
	private brand: Brand := new Brand("Adidas");
	private project1: Project := new Project("p1", 1, {<ambassador> |-> 1}, {<ambassador> |-> 1000}, {<tech>}, 100);
	private celebrity: Celebrity := new Celebrity("Jose", {<sport>,<actor>}, 100, 30, {<ambassador>}, 2);
	private contract1: [Contract] := nil;
	private contract2: [Contract] := nil;
	private contract3: [Contract] := nil;
	private platform: Platform := new Platform(mk_Globals`Date(2000,1,1));
operations
	private testAttributes: () ==> ()
		testAttributes() == (
			dcl stepDate: Globals`Date := Globals`calculateFinalDate(mk_Globals`Date(2015,1,1),731);
			
			platform := new Platform();
			
			platform.addBrand(brand);
			platform.addCelebrity(celebrity);
			
			assert(platform.getBrands() = {brand});
			assert(platform.getCelebs() = {celebrity});
			
			brand.addProject(project1);
			contract1 := new Contract(duration,brand,project1,celebrity,totalPrice,initialDate,<ambassador>);
			celebrity.addContract(contract1);
			
			contract2 := new Contract(duration,brand,project1,celebrity,totalPrice,mk_Globals`Date(2017,1,10),<ambassador>);
			celebrity.addContract(contract2);
			
			contract3 := new Contract(duration,brand,project1,celebrity,totalPrice,mk_Globals`Date(2017,1,20),<ambassador>);
			celebrity.addContract(contract3);
			
			platform.step(stepDate);
			
			assert(celebrity.getContracts() = [contract2,contract3]);
			
			platform.removeBrand(brand);
			platform.removeCelebrity(celebrity);
			
			assert(platform.getBrands() = {});
			assert(platform.getCelebs() = {});
			
			platform.createBrand("Nike");
			platform.createCelebrity("Antonio", {<actor>}, 100, 30, {<entertainer>}, 4);
			
			platform.step();
			
			assert(platform.currentDate = mk_Globals`Date(2017,1,2));
		);
		
	private testAll: () ==> ()
		testAll() == (
			testAttributes();
		);
		
	public static main: () ==> ()
		main() == (
			new PlatformTest().testAll();
		);
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end PlatformTest