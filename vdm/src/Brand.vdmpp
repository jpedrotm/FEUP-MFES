class Brand
types
-- TODO Define types here

values
-- TODO Define values here

instance variables
	private name: Globals`String;
	public projects: set of Project;
	
operations
-- TODO Define operations here
	public Brand:Globals`String ==> Brand
		Brand(n) == (
			name := n;
			projects := {};
		)
		post name = n and projects = {};
	
	public getName: () ==> Globals`String
		getName() == return name
		post RESULT = name;
		
	public getProjects: () ==> set of Project
		getProjects() == return projects
		post RESULT = projects;
		
	public getNumProjects: () ==> int
		getNumProjects() == return card projects
		post RESULT = card  projects;
	
	public addProject: Project ==> ()
		addProject(p) == projects := projects union {p}
		pre p not in set projects
		post p in set projects;
		
	public removeProject: Project ==> ()
		removeProject(p) == projects := projects \ {p}
		pre p in set projects
		post p not in set projects;

functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end Brand